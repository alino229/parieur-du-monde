<?php

namespace App\Controller\Admin;

use App\Entity\Article;
use Doctrine\ORM\QueryBuilder;
use EasyCorp\Bundle\EasyAdminBundle\Collection\FieldCollection;
use EasyCorp\Bundle\EasyAdminBundle\Collection\FilterCollection;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Config\Filters;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Dto\EntityDto;
use EasyCorp\Bundle\EasyAdminBundle\Dto\SearchDto;
use EasyCorp\Bundle\EasyAdminBundle\Field\BooleanField;
use EasyCorp\Bundle\EasyAdminBundle\Field\DateTimeField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ImageField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use FOS\CKEditorBundle\Form\Type\CKEditorType;
use Vich\UploaderBundle\Form\Type\VichFileType;
use function Sodium\add;

class ArticleCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Article::class;
    }
    public function configureCrud(Crud $crud): Crud
    {
        return $crud
            // the labels used to refer to this entity in titles, buttons, etc.
            ->setEntityLabelInSingular('Home article')
            ->setEntityLabelInPlural('Les articles de la page d\'accueil')

            // the Symfony Security permission needed to manage the entity
            // (none by default, so you can manage all instances of the entity)
//            ->setEntityPermission('ROLE_EDITOR')
            ;
    }


    public function configureFields(string $pageName): iterable
    {
        return [
            IdField::new('id')->hideOnForm(),
            BooleanField::new('published'),
            TextField::new('titre'),
            TextEditorField::new('contenu')->setFormType(CKEditorType::class),
            TextField::new('slug'),
            TextField::new('auteur'),
            DateTimeField::new('created_at')->setTimezone('Europe/Paris')->setFormat('dd/MM/yy H:mm'),
            ImageField::new('imageFile')->hideOnIndex()->setFormType(VichFileType::class)->onlyOnForms()->setLabel('image principale'),
            TextField::new('imageAlt')->hideOnIndex()->setLabel('attribut alt'),
            TextField::new('imageTitre')->hideOnIndex()->setLabel('attribut titre'),
            TextField::new('metaDesciption')->hideOnIndex()->setLabel('mÃ©ta description '),
        ];
    }
    /*public function configureFilters(Filters $filters): Filters
    {
        /*return $filters
           ->add('id')
            ->add(BooleanField::new('published'))
            ->add('titre')
           ->add('contenu');

    }*/

    /**
     * @param SearchDto $searchDto
     * @param EntityDto $entityDto
     * @param FieldCollection $fields
     * @param FilterCollection $filters
     * @return QueryBuilder
     */
    public function createIndexQueryBuilder(SearchDto $searchDto, EntityDto $entityDto, FieldCollection $fields, FilterCollection $filters): QueryBuilder
    {
        return parent::createIndexQueryBuilder($searchDto, $entityDto, $fields, $filters); // TODO: Change the autogenerated stub
    }

}
